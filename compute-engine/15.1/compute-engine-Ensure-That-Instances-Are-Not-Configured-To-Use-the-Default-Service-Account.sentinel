import "tfplan/v2" as tfplan
import "strings"

allComputeInstances = filter tfplan.resource_changes as _, resource_changes {
	resource_changes.type is "google_compute_instance" and
		resource_changes.mode is "managed" and
		(resource_changes.change.actions contains "create" or
			resource_changes.change.actions is ["update"])
}

allComputeInstanceTemplates = filter tfplan.resource_changes as _, resource_changes {
	resource_changes.type is "google_compute_instance_template" and
		resource_changes.mode is "managed" and
		(resource_changes.change.actions contains "create" or
			resource_changes.change.actions is ["update"])
}

print("Ensure That Instances Are Not Configured To Use the Default Service Account")


deny_defined_instance_service_account = rule {
	all allComputeInstances as _, instances {
		instances.change.after.service_account is not null
	}
}

deny_undefined_compute_instance_no_default_service_account = rule when deny_defined_instance_service_account is true {
	all allComputeInstances as _, instances {
		keys(instances.change.after.service_account[0]) contains "email"
	}
}

instances_are_not_configured_to_use_default_service_Account = rule when deny_undefined_compute_instance_no_default_service_account is true {
	all allComputeInstances as _, instances {
		strings.to_lower(instances.change.after.service_account[0]["email"]) is not "1092374590518-compute@developer.gserviceaccount.com"
	}
}

deny_undefined_instance_template_service_account = rule {
	all allComputeInstanceTemplates as _, templates {
		keys(templates.change.after) contains "service_account"
	}
}

deny_undefined_compute_instance_template_no_default_service_account = rule when deny_undefined_instance_template_service_account is true {
	all allComputeInstanceTemplates as _, templates {
		keys(templates.change.after.service_account[0]) contains "email"
	}
}

instances_are_not_configured_to_use_default_service_Account_template = rule when deny_undefined_compute_instance_template_no_default_service_account is true {
	all allComputeInstanceTemplates as _, templates {
		strings.to_lower(templates.change.after.service_account[0]["email"]) is not "1092374590518-compute@developer.gserviceaccount.com"
	}
}


main = rule {
	deny_defined_instance_service_account and
    deny_undefined_compute_instance_no_default_service_account and
	instances_are_not_configured_to_use_default_service_Account and
	deny_undefined_instance_template_service_accountdeny_undefined_instance_template_service_account and
	deny_undefined_compute_instance_template_no_default_service_account and
	instances_are_not_configured_to_use_default_service_Account_template
}